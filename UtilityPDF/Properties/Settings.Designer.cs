//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UtilityPDF.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.10.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compress >>> COMPLETED <<<")]
        public string CompressCompleted {
            get {
                return ((string)(this["CompressCompleted"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("VERY LOW COMPRESS --> MAX QUALITY")]
        public string CompressLvl_0 {
            get {
                return ((string)(this["CompressLvl_0"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LOW COMPRESS --> HIGH QUALITY")]
        public string CompressLvl_1 {
            get {
                return ((string)(this["CompressLvl_1"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("MEDIUM COMPRESS --> MEDIUM QUALITY")]
        public string CompressLvl_2 {
            get {
                return ((string)(this["CompressLvl_2"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("HIGH COMPRESS --> LOW QUALITY")]
        public string CompressLvl_3 {
            get {
                return ((string)(this["CompressLvl_3"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("An error occurred: ")]
        public string GenericMessageError {
            get {
                return ((string)(this["GenericMessageError"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compress PDF in progress...")]
        public string LblCompressInProgress {
            get {
                return ((string)(this["LblCompressInProgress"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compression LEVEL")]
        public string LblCompressionLvl {
            get {
                return ((string)(this["LblCompressionLvl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Merge PDF in progress...")]
        public string LblMergeInProgress {
            get {
                return ((string)(this["LblMergeInProgress"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("PDF file from EXTRACT TEXT")]
        public string LblMsgInputPDF_Extr {
            get {
                return ((string)(this["LblMsgInputPDF_Extr"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Directory Output TXT File")]
        public string LblMsgOutputDIR_Extr {
            get {
                return ((string)(this["LblMsgOutputDIR_Extr"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Directory Output Merged PDF")]
        public string LblMsgOutputDIR_Merge {
            get {
                return ((string)(this["LblMsgOutputDIR_Merge"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select the language that OCR use")]
        public string LblMsgSelLang {
            get {
                return ((string)(this["LblMsgSelLang"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compress PDF")]
        public string LblPanelCompress {
            get {
                return ((string)(this["LblPanelCompress"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Extract Text From PDF Using OCR")]
        public string LblPanelExtract {
            get {
                return ((string)(this["LblPanelExtract"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Merge PDF")]
        public string LblPanelMerge {
            get {
                return ((string)(this["LblPanelMerge"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Merge >>> COMPLETED <<<")]
        public string MergeCompleted {
            get {
                return ((string)(this["MergeCompleted"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("An IO error occurred: ")]
        public string SpecificMessageErrorIO {
            get {
                return ((string)(this["SpecificMessageErrorIO"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Abort")]
        public string TxtAbortBtn {
            get {
                return ((string)(this["TxtAbortBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Compress")]
        public string TxtCompressBtn {
            get {
                return ((string)(this["TxtCompressBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Exit")]
        public string TxtExitBtn {
            get {
                return ((string)(this["TxtExitBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Extract")]
        public string TxtExtractBtn {
            get {
                return ((string)(this["TxtExtractBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Merge")]
        public string TxtMergetBtn {
            get {
                return ((string)(this["TxtMergetBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select DIR ")]
        public string TxtOutputDirBtn {
            get {
                return ((string)(this["TxtOutputDirBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Reset")]
        public string TxtResetBtn {
            get {
                return ((string)(this["TxtResetBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select PDF")]
        public string TxtSelectPDFBtn {
            get {
                return ((string)(this["TxtSelectPDFBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Do you confirm extraction >>> ABORT <<< ?")]
        public string WarnConfirmAbort {
            get {
                return ((string)(this["WarnConfirmAbort"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("If a PDF file with the same name already exists (OUTPUT file will have the SAME N" +
            "AME_COMPRESSED as the selected PDF file) in the folder you select, it will be ov" +
            "erwritten!!!")]
        public string WarnSelectOutDirCOMP {
            get {
                return ((string)(this["WarnSelectOutDirCOMP"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("If a PDF file with the same name already exists (PDF_MERGED file will have the SA" +
            "ME NAME + MERGED as the first selected PDF file) in the folder you select, it wi" +
            "ll be overwritten!!!")]
        public string WarnSelectOutDirMERGE {
            get {
                return ((string)(this["WarnSelectOutDirMERGE"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("If a TXT file with the same name already exists (TXT file will have the SAME NAME" +
            ".TXT as the selected PDF file) in the folder you select, it will be overwritten!" +
            "!!")]
        public string WarnSelectOutDirTXT {
            get {
                return ((string)(this["WarnSelectOutDirTXT"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Extraction >>> COMPLETED <<<")]
        public string InfoCompleteExtraction {
            get {
                return ((string)(this["InfoCompleteExtraction"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Extraction >>> ABORTED <<< !!!")]
        public string WarnAbortedExtraction {
            get {
                return ((string)(this["WarnAbortedExtraction"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("tessdata")]
        public string trainerDataFolder {
            get {
                return ((string)(this["trainerDataFolder"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("lang.csv")]
        public string csvLangFilename {
            get {
                return ((string)(this["csvLangFilename"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Convert PDF to DOCX")]
        public string LblPanelConvDOCX {
            get {
                return ((string)(this["LblPanelConvDOCX"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Convert")]
        public string TxtConvertBtn {
            get {
                return ((string)(this["TxtConvertBtn"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Convert PDF in progress...")]
        public string LblConvertInProgress {
            get {
                return ((string)(this["LblConvertInProgress"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("If a DOCX file with the same name already exists (DOCX file will have the SAME NA" +
            "ME_CONVERT.DOCX as the selected PDF file) in the folder you select, it will be o" +
            "verwritten!!!")]
        public string WarnSelectOutDirDOCX {
            get {
                return ((string)(this["WarnSelectOutDirDOCX"]));
            }
        }
    }
}
